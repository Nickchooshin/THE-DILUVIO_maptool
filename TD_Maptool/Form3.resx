<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAIAAAAlC+aJAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr4AAA6+AepCscAAAAQxSURBVGhD7ZIxjtxGEEV9CB/FsSNDkWNFDh0JOoIixYZO
        IjjyGRTpCI4EhQoNRwJWD3iNUm2x2SSbHA0W2MLHoKf4u+o/zvz08MTrGeDe9Qxw73oGuHfdBODNi9/W
        1BzX1ZUAkfLL33+tKTztzum6BsBM71/9gQz69dM/SwUGugrjLECObvoSuqvMcBLjFEBE35m7KDDauKma
        BzC9IUqyQzrJMAkQ6UuaOZ1hmAG4Nr2aZjgMcIv0oQmGYwCmR2XxVZr4HWYAbvT60W0Bbp1efXz7+hDD
        XgDT3+7PE+IFHWI4BrB8/fSzytM5CYDa7mHtAmDW8vW7478Pv2fZzLYJxY+AWoL12gZwUHn9dEr0LJ6G
        c0IZALUcK7UBwH2i+xkL+FoSL4Un/EcFgD94bG9pejUC8L4vY/n6v/7/byhHV3jCf1QCuJHtY4YNAMdl
        gGV6ldOraYYMoGYAuMMUxxUA4r7+9Zec3q85/ed3P18IMPgRRgAx7gcD+LfxrxtNzi3Z4+oD4Pb1I+kz
        APnev/wzA/A1p0fTACwSwL2c7fu15Uu1CuBNXwMqACgDRG5F+mmASG9iPnOSli9VB8BrjnMKCgDE15I4
        60x6FADuRTlMi5hqBOCU6Cx/hKVMPw1Q/j+x3aeRJ1cfwF8tX8gAiH6Jjk6mR6wwfV7NwdXdf1EfwAvd
        KSE6KEJHdJRt+8X8eP3d1XzStxlVAXBjcmJ3ShH9rPL0kAYA/iNQ7lsdgHAzMbu53GW4RCU9alsfR+Iw
        AuBZTlkAON8UIKcve+lkW35aAXLEAkBx+RYMzFx7/VQG0DwPUGZdpZK+LKXohHkEwOUxAEUne06KUZvp
        qQLAlfZgE6A78SqGnekpbOVWe1AAeLAHgDrJwF1z7ElPv1zvA5gpx+I8nlv8e+QVEuxMTy0BUPgrQPHR
        GY/2R1PlblZ4ltE302Mo01Bc6QPkw3i6MpYRu9KwjI6c0CYuyuGDVKsAnrO1FP0cIiJmhaGrmLC2gnJy
        juSZWxpWAfyqtbuAfk6JB3keSJtO7rrCdW1uKprh4cyn8dyrpwMQF9zh1mZKRV+n43RqHkgPwu91RafN
        TaU/MugUgIOePgBnOy7zay46JQFf3bRH5a7X2+hUJQCfOEnoBD0jAJtxzsUIFxctGeiEolNuqe6iHIAD
        NgGQzQowmJVrLQQyqImLBulRZFqrSIgzEnYA8uNuhbOrnNW4uZOdRXsA8OjsA/BAjQGc0pVZua5ioP1N
        gPHePDCc3wEoHeMplCPKehTRmy+Vk9GAREO7sFLLhI8AqLUEUREF5fWmb6b18vo0AFW2VIDN6gL4UvcA
        WDi9kic4c/8Qax6grD+6OE+I9OgOABwmAPB7kQmRHt0H4OhWK4Y4EE3MOQxAyXAhAJ8/GoCV6skDqDMA
        6kkCXDJnBoBiU1brHq+zcx4evgEetSFg3iFnmQAAAABJRU5ErkJggg==
</value>
  </data>
</root>